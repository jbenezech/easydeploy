---
- name: Get next page id from the database
  shell: psql -lqt {{ DBNAME }} -U postgres -c "select max(id)+1 from page;" | tr -d '\040\011\012\015'
  become: yes
  become_user: postgres
  register: PAGE_SQL

- set_fact: PAGE_ID={{ PAGE_SQL.stdout }}

- debug: var=PAGE_ID

- name: create Apache VirtualHost for app
  template: src=apache2.vhost.js2 dest=/etc/apache2/sites-available/{{ PAGENAME }}.conf
  notify:
    restart Apache

- name: enable Apache VirtualHost for app
  command: creates=/etc/apache2/sites-enabled/{{ PAGENAME }}.conf
    a2ensite {{ PAGENAME }}
  notify:
    - restart Apache

- name: Add admin user
  become: yes
  become_user: "{{ APPNAME }}"
  shell: chdir="{{ APPDIR }}/{{ APPNAME }}" 
    bin/console fos:user:create -q --no-ansi admin@{{ PAGENAME }} admin@{{ PAGENAME }} admin &&
    bin/console fos:user:promote admin@{{ PAGENAME }} ROLE_ADMIN &&
    bin/console fos:user:activate admin@{{ PAGENAME }}   
  ignore_errors: yes ##Ignore errors because if the task is re-run, this will fail with duplicate entries

- name: Copy sql template
  template: src=add_page.js2 dest=/tmp/{{ PAGENAME }}.sql

- name: Insert new page
  become: yes
  become_user: postgres
  shell: psql {{ DBNAME }} -U postgres < /tmp/{{ PAGENAME }}.sql
  
  